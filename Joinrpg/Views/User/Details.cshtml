@using JoinRpg.Web.Models
@model UserProfileViewModel

@{
  ViewBag.Title = "Профиль " + Model.DisplayName;
}

<h2>@ViewBag.Title</h2>

<div>
    <h4>@Model.FullName</h4>
    <hr/>

    @if (Model.AllrpgId != null && Model.AllrpgId != 0)
    {
        <p><a href="http://inf.allrpg.info/users/@Model.AllrpgId/">Профиль на allrpg</a>
        </p>
    }

    @if (Model.ThisUserProjects.Any())
    {
    <h4>Проекты этого пользователя </h4>
            <ul>
                @foreach (var master in Model.ThisUserProjects)
                {
                    <li>
                        @Html.ActionLink(@master.Project.ProjectName, "Details", "Game", new {master.ProjectId}, null)
                        @if (master.IsOwner)
                        {
                            <span>(создатель проекта)</span>
                        }
                    </li>
                }

            </ul>
    }
    @if (Model.Claims.Any())
    {
        @Html.Partial("..\\Claim\\Index", Model.Claims, new ViewDataDictionary() {{"HideUserColumn", true}})
    }

    @if (Model.ProjectsToAdd.Any())
    {
        using (Html.BeginForm("Add", "Acl", FormMethod.Post))
        {
        @Html.AntiForgeryToken()
        <details>
            <summary>Добавить в проект..</summary>
            <div class="form-horizontal">
                <h4>Проект</h4>

                @*TODO: Move to partial view*@
                @Html.HiddenFor(model => Model.UserId)

                @{ var acl = new AclViewModel();}
                @Html.EditorFor(model => acl.ProjectId, "ProjectDropDown", "ProjectId", new { Projects = Model.ProjectsToAdd })
                <div class="form-group">
                    @Html.LabelFor(model => acl.CanApproveClaims, htmlAttributes: new {@class = "control-label col-md-2", @for = "CanApproveClaims" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => acl.CanApproveClaims, null, htmlFieldName: "CanApproveClaims")
                            @Html.ValidationMessageFor(model => acl.CanApproveClaims, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => acl.CanChangeFields, htmlAttributes: new { @class = "control-label col-md-2", @for= "CanChangeFields" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => acl.CanChangeFields, null, htmlFieldName: "CanChangeFields")
                            @Html.ValidationMessageFor(model => acl.CanChangeFields, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => acl.CanChangeProjectProperties, htmlAttributes: new { @class = "control-label col-md-2", @for = "CanChangeProjectProperties" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => acl.CanChangeProjectProperties, null, htmlFieldName: "CanChangeProjectProperties")
                            @Html.ValidationMessageFor(model => acl.CanChangeProjectProperties, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => acl.CanGrantRights, htmlAttributes: new {@class = "control-label col-md-2", @for = "CanGrantRights"})
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => acl.CanGrantRights, null, htmlFieldName: "CanGrantRights")
                            @Html.ValidationMessageFor(model => acl.CanGrantRights, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => acl.CanEditRoles, htmlAttributes: new {@class = "control-label col-md-2", @for = "CanEditRoles" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => acl.CanEditRoles, null, htmlFieldName: "CanEditRoles")
                            @Html.ValidationMessageFor(model => acl.CanEditRoles, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => acl.CanAcceptCash, htmlAttributes: new {@class = "control-label col-md-2", @for = "CanAcceptCash" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => acl.CanAcceptCash, null, htmlFieldName: "CanAcceptCash")
                            @Html.ValidationMessageFor(model => acl.CanAcceptCash, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => acl.CanManageMoney, htmlAttributes: new { @class = "control-label col-md-2", @for = "CanManageMoney" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => acl.CanManageMoney, null, htmlFieldName: "CanManageMoney")
                            @Html.ValidationMessageFor(model => acl.CanManageMoney, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <input type="submit" value="Добавить" class="btn btn-default"/>
                </div>
</details>
        }
    }
    </div>