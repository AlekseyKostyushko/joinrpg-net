@using JoinRpg.Domain
@using JoinRpg.Web.App_Code
@using JoinRpg.Web.Models.Plot
@model EditPlotFolderViewModel

@{
    ViewBag.Title = "Сюжет «" + Model.PlotFolderMasterTitle.RemoveTagNames() + "»";
}

<h2>@ViewBag.Title</h2>
@if (Model.TagNames.Any())
{
    foreach (var tagName in Model.TagNames)
    {
    @Html.ActionLink("#" + tagName, "ByTag", "Plot", new { Model.ProjectId, tagName }, null)
    <text> </text>
    }
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PlotFolderId)
        @Html.HiddenFor(model => model.ProjectId)
        @if (Model.HasEditAccess)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.PlotFolderMasterTitle, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">

                    @Html.EditorFor(model => model.PlotFolderMasterTitle, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.PlotFolderMasterTitle, "", new {@class = "text-danger"})
                    @Html.DescriptionFor(model => model.PlotFolderMasterTitle)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TodoField, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TodoField, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.TodoField, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@(Model.Status == PlotStatus.Deleted ? "Восстановить" : "Сохранить")" class="btn btn-default"/>
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.PlotFolderMasterTitle, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">

                    @Html.DisplayFor(model => model.PlotFolderMasterTitle, new {htmlAttributes = new {@class = "form-control"}})
                </div>
            </div>
            if (Model.HasMasterAccess)
             {
                 <div class="form-group">
                     @Html.LabelFor(model => model.TodoField, htmlAttributes: new {@class = "control-label col-md-2"})
                     <div class="col-md-10">
                         @Html.DisplayFor(model => model.TodoField, new {htmlAttributes = new {@class = "form-control"}})
                     </div>
                 </div>
             }
        }
    </div>
}
<h3>Вводные
    @if (Model.HasEditAccess)
    {
        <a href="@Url.Action("CreateElement", new {Model.PlotFolderId, Model.ProjectId})" class="btn btn-success"><span class="glyphicon glyphicon-plus"></span>Добавить вводную...</a>
        <a href="@Url.Action("CreateHandout", new {Model.PlotFolderId, Model.ProjectId})" class="btn btn-success"><span class="glyphicon glyphicon-plus"></span>Добавить элемент раздатки...</a>
    }
</h3>

@Html.Partial("Elements", Model.Elements)

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
