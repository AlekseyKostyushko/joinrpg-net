@model JoinRpg.Web.Models.AclViewModel

@{
    ViewBag.Title = "Изменение доступа " + Model.Master.DisplayName + " в игру " +Model.ProjectName;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.UserId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.CanManageClaims, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CanManageClaims)
                    @Html.ValidationMessageFor(model => model.CanManageClaims, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CanChangeFields, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CanChangeFields)
                    @Html.ValidationMessageFor(model => model.CanChangeFields, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CanChangeProjectProperties, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CanChangeProjectProperties)
                    @Html.ValidationMessageFor(model => model.CanChangeProjectProperties, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CanGrantRights, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CanGrantRights)
                    @Html.ValidationMessageFor(model => model.CanGrantRights, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CanEditRoles, htmlAttributes: new { @class = "control-label col-md-2", @for = "CanEditRoles" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CanEditRoles, null, htmlFieldName: "CanEditRoles")
                    @Html.ValidationMessageFor(model => model.CanEditRoles, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CanAcceptCash, htmlAttributes: new { @class = "control-label col-md-2", @for = "CanAcceptCash" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CanAcceptCash, null, htmlFieldName: "CanAcceptCash")
                    @Html.ValidationMessageFor(model => model.CanAcceptCash, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CanManageMoney, htmlAttributes: new { @class = "control-label col-md-2", @for = "CanManageMoney" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CanManageMoney, null, htmlFieldName: "CanManageMoney")
                    @Html.ValidationMessageFor(model => model.CanManageMoney, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", "Index", new {Model.ProjectId})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
