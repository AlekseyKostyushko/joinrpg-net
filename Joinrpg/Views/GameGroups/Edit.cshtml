@using JoinRpg.Web.Models
@model EditCharacterGroupViewModel

@{
  ViewBag.Title = "Редактирование группы персонажей «" + Model.Name + "»";
}

<h2>@ViewBag.Title</h2>
@Html.Partial("_GroupHelpTextPartial")
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.HiddenFor(model => model.ProjectId)
        @Html.HiddenFor(model => model.CharacterGroupId)

        @if (!Model.IsRoot)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ParentCharacterGroupIds, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.Partial("ParentCharacterGroupPartial")
                        @Html.ValidationMessageFor(model => model.ParentCharacterGroupIds, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsPublic, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsPublic)
                        @Html.ValidationMessageFor(model => model.IsPublic, "", new {@class = "text-danger"})

                    </div>
                    <p class="help-block">Публичные группы показываются в сетке ролей и на карточках персонажей.</p>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                    <p class="help-block">Если группа публична, будет доступно всем. Если нет — только членам группы.</p>
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.HaveDirectSlots, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.HaveDirectSlots)
                @Html.ValidationMessageFor(model => model.HaveDirectSlots, "", new {@class = "text-danger"})
                <p class="help-block">Прямые заявки — заявки не на прописанных персонажей, а на абстрактных членов группы — не на Арагорна, а на «какого-то следопыта».</p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DirectSlots, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-2">
                @Html.EditorFor(model => model.DirectSlots, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.DirectSlots, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResponsibleMasterId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.ResponsibleMasterId, Model.Masters.Select(project => new SelectListItem() { Text = project.Name, Value = project.Id }), new {@class="form-control"})
                @Html.ValidationMessageFor(model => model.ResponsibleMasterId, "", new {@class = "text-danger"})
                <p class="help-block">Ответственный мастер, который будет назначен новым заявкам. Может быть переопределен в дочерних группах. Если ответственный мастер не установлен, он берется из родительской группы. Изменение этого поля не изменит существующие заявки.</p>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-success"/>
                @Html.ActionLink("Назад к сетке ролей группы", "Index", new { @Model.ProjectId, Model.CharacterGroupId }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}