@using JoinRpg.Web.Models
@model GameRolesViewModel

@helper GetPathString(CharacterGroupListItemViewModel item)
{
    @(string.Join("→", item.Path.Skip(1).Select(p => p.Name)) + "→" + item.Name)
}

@{
  ViewBag.Title = "Локации";
}

<h2>@ViewBag.Title</h2>

@foreach (var item in Model.ShowEditControls ? Model.Data.ActiveGroups : Model.Data.PublicGroups)
{
    var hideClassName = !item.IsPublic ? "world-object-hidden" : "";
<div style="margin-left: @(item.DeepLevel)em" class="@hideClassName">
    @if (item.DeepLevel > 2)
    {
    @* Get rid of code duplication here*@
    <h4 title="@GetPathString(item)">@Html.ActionLink(item.Name, "Locations", new { Model.ProjectId, item.CharacterGroupId }, null)</h4>
    }
    else if (item.DeepLevel == 2)
    {
    @* Get rid of code duplication here*@
    <h3 title="@GetPathString(item)">@Html.ActionLink(item.Name, "Locations", new { Model.ProjectId, item.CharacterGroupId }, null)</h3>
    }
    else
    {
    <h2 title="@GetPathString(item)">@Html.ActionLink(item.Name, "Locations", new { Model.ProjectId, item.CharacterGroupId }, null)</h2>
    }

    @if (item.FirstCopy)
    {
        <div>
            @Html.ActionLink("Персонажи", "Index", "GameGroups", new { Model.ProjectId, item.CharacterGroupId }, null)
            @if (Model.ShowEditControls)
            {
              <text>/</text>
                @Html.Partial("_GroupEditControls", item)
            }
        </div>
    }
</div>
}
