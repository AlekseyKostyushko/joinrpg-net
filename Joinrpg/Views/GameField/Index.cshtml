@model JoinRpg.Web.Models.GameFieldListViewModel

@{
    ViewBag.Title = "Поля персонажа / заявки";
}

<h2>
    @ViewBag.Title
@if (Model.CanEditFields)
{
<a href="@Url.Action("Create", new {Model.ProjectId})" class="btn btn-info"><span class="glyphicon glyphicon-plus"></span>Добавить новое поле</a>
}
</h2>
@{
    var firstItem = Model.Items.FirstOrDefault();
}
@if (firstItem != null)
{
    <table class="table" style="margin-top: 1em">
        <tr>
            <th>
                @Html.DisplayNameFor(model => firstItem.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.FieldViewType)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.FieldBoundTo)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.IsPublic)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.CanPlayerView)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.CanPlayerEdit)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.Description)
            </th>
            <th>

            </th>
            @if (Model.CanEditFields)
            {
                <th></th>
            }
        </tr>

        @foreach (var item in Model.Items)
        {
            <tr>
                <td class="@(item.IsActive ? "" : "deleted")">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FieldViewType)
                </td>
                <td>
                    @Html.DisplayFor(model => item.FieldBoundTo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsPublic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CanPlayerView)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CanPlayerEdit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @if (!item.IsActive)
                    {
                        <span>удалено</span>
                    }
                </td>
                @if (Model.CanEditFields)
                {
                    <td>
                        @{
                            if (item.IsActive)
                            {
                                @Html.ActionLink("Изменить", "Edit", new { item.ProjectFieldId, item.ProjectId})<text> | </text>
                                @Html.ActionLink("Удалить", "Delete", new { item.ProjectFieldId, item.ProjectId})
                            }
                            else
                            {
                                @Html.ActionLink("Восстановить", "Edit", new { item.ProjectFieldId, item.ProjectId})
                            }
                            var moveParameters = new
                            {
                                 item.ProjectFieldId, Model.ProjectId,
                            };
                            if (!item.First)
                            {
                                <a href="@Url.Action("MoveUp", moveParameters)"><span title="переместить выше" class="glyphicon glyphicon-arrow-up"></span></a>
                            }
                            if (!item.Last)
                            {
                                <a href="@Url.Action("MoveDown", moveParameters)"><span title="переместить ниже" class="glyphicon glyphicon-arrow-down"></span></a>
                            }
                        }
                    </td>
                }
            </tr>
        }

    </table>
}