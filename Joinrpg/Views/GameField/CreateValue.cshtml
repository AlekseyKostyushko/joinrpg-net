@using JoinRpg.Web.App_Code
@model JoinRpg.Web.Models.GameFieldDropdownValueCreateViewModel
@{
  ViewBag.Title = "Добавление нового значения в список";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
   @Html.HiddenFor(model => model.ProjectId)
@Html.HiddenFor(model => model.ProjectFieldId)

    <div class="form-horizontal">
        <h4>Добавление нового значения</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Label, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Label, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Label, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
      
      <div class="form-group">
        @Html.LabelFor(model => model.MasterDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.MasterDescription, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.MasterDescription, "", new { @class = "text-danger" })
          @Html.DescriptionFor(model => model.MasterDescription)
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.ProgrammaticValue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.ProgrammaticValue, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.ProgrammaticValue, "", new { @class = "text-danger" })
          @Html.DescriptionFor(model => model.ProgrammaticValue)
        </div>
      </div>


      <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить" class="btn btn-success" /> @Html.ActionLink("Назад к списку значений", "Edit", new { Model.ProjectFieldId, Model.ProjectId }, new {@class ="btn btn-default"})
            </div>
        </div>
    </div>
}