@using JoinRpg.Domain
@model JoinRpg.Web.Models.ICharacterFieldsViewModel
@functions {
  private bool CanView(CharacterFieldValue field)
  {
      return field.Field.IsPublic || (Model.HasMasterAccess || (Model.HasPlayerAccessToCharacter && field.Field.CanPlayerView));
  }

  private bool CanEdit(CharacterFieldValue field)
  {
      return (Model.HasMasterAccess || (Model.HasPlayerAccessToCharacter && field.Field.CanPlayerEdit));
  }

}
<h4>Поля персонажа</h4>
<div class="form-horizontal">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.CharacterName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @(Model.HasMasterAccess ? Html.EditorFor(model => model.CharacterName) : Html.DisplayFor(model => model.CharacterName))
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Игрок</label>
            <div class="col-md-10">
                @Html.DisplayFor(model => model, "IPlayerCharacter")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentGroups, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var gr in Model.ParentGroups.Where(g => Model.HasMasterAccess || g.IsPublic))
                {
                    @Html.ActionLink(gr.Name, "Index", "GameGroups", new { gr.CharacterGroupId, gr.ProjectId }, null) <br/>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Model.HasMasterAccess ? Html.EditorFor(model => model.Description) : Html.DisplayFor(model => model.Description))
            </div>
        </div>

        foreach (var field in Model.CharacterFields.Where(CanView))
        {
            if (CanEdit(field))
            {
                @Html.EditorFor(model => field);
            }
            else
            {
                @Html.DisplayFor(model => field);
            }
        }
        if (Model.CharacterFields.Any(CanEdit))
            {
            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="Сохранить" class="btn btn-default"/>
                </div>
            </div>
        }
    }
</div>