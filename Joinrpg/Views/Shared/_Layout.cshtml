@using JoinRpg.Web.Models
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <script type="text/javascript">
        var appInsights=window.appInsights||function(config){
            function s(config){t[config]=function(){var i=arguments;t.queue.push(function(){t[config].apply(t,i)})}}var t={config:config},r=document,f=window,e="script",o=r.createElement(e),i,u;for(o.src=config.url||"//az416426.vo.msecnd.net/scripts/a/ai.0.js",r.getElementsByTagName(e)[0].parentNode.appendChild(o),t.cookie=r.cookie,t.queue=[],i=["Event","Exception","Metric","PageView","Trace"];i.length;)s("track"+i.pop());return config.disableExceptionTracking||(i="onerror",s("_"+i),u=f[i],f[i]=function(config,r,f,e,o){var s=u&&u(config,r,f,e,o);return s!==!0&&t["_"+i](config,r,f,e,o),s}),t
        }({
            instrumentationKey:"47f96319-0562-4792-b7fe-fb75fc0af2dc"
        });
        
        window.appInsights=appInsights;
        appInsights.trackPageView();
    </script>
</head>
<body>

<!-- test -->

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("JoinRpg.Ru", "Index", "Home", new {area = ""}, new {@class = "navbar-brand"})
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                @if (User.Identity.IsAuthenticated)
                {
                    <li>@Html.ActionLink("Мои заявки", "My", "Claim")</li>
                }
                @Html.Action("MyProjectDropdown", "Menu")
                @if (ViewBag.IsProduction != true)
                {
                    <li class="alert-danger">@Html.ActionLink("Тестовая версия", "AboutTest", "Home")</li>
                }
                else
                {
                    <li>@Html.ActionLink("О проекте", "About", "Home")</li>
                }
                <li class="navbar-text">
                    @Html.Partial("SuperSearchPartial", new SuperSearchViewModel())
                </li>
            </ul>
            @Html.Partial("_LoginPartial")
        </div>
    </div>
</div>
@if (ViewBag.MasterMenu != null)
{
    @Html.Partial("_MasterMenuPartial", (MasterMenuViewModel) ViewBag.MasterMenu)
}
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            @{
                var supportEmail = "support@" + Request.Url.Host;
            }
            &copy; <a href="http://bastilia.ru">#</a>ЛеоЦарев и друзья. Поддержка: <span class="glyphicon glyphicon-envelope" aria-hidden="true"></span> <a href="maito:@supportEmail">@supportEmail</a>
            <div>@ViewBag.TraceMessage</div>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    @Scripts.Render("~/bundles/jqueryval")
    
<script src="~/Scripts/jquery.details.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $('html').addClass($.fn.details.support ? 'details' : 'no-details');
    $('details').details();
    $('.datepicker').datepicker({
        format: {
            /*
            Say our UI should display a week ahead,
            but textbox should store the actual date.
            This is useful if we need UI to select local dates,
            but store in UTC
            */
            toDisplay: function (date, format, language) {
                var d = new Date(date);
                d.setDate(d.getDate());
                return d.toISOString();
            },
            toValue: function (date, format, language) {
                var d = new Date(date);
                d.setDate(d.getDate());
                return new Date(d);
            }
        },
        autoclose: true
    });
</script>
</body>
</html>
