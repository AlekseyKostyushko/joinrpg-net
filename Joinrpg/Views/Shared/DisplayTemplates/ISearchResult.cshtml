@using System.Text.RegularExpressions
@using JoinRpg.Web.Helpers
@using JoinRpg.Web.Models
@model TargetedSearchResultViewModel

<div>
    <h4>
        @{
          var gameObjectLinkViewModel = Model.SearchResult.AsObjectLink();
        }
        @Html.DisplayFor(model => gameObjectLinkViewModel)

    </h4>
    <p>
        @{
          string descriptionToShow = (Model.SearchResult.Description.Contents ?? "");

          const int maxLengthToShow = 200;
          if (descriptionToShow.Length > maxLengthToShow)
          {
              int startOfSearchedFragment = descriptionToShow.IndexOf(Model.SearchTarget, StringComparison.InvariantCultureIgnoreCase);

              //Try to put the beginning og thr searched fragment in the middle of the substring
              int startOfSubtringToShow = startOfSearchedFragment > (maxLengthToShow / 2)
                  ? startOfSearchedFragment - (maxLengthToShow / 2)
                  : 0;

              //Move substring to the left, if needed
              startOfSubtringToShow = (startOfSubtringToShow + maxLengthToShow) > descriptionToShow.Length
                    ? descriptionToShow.Length - maxLengthToShow
                    : startOfSubtringToShow;

              descriptionToShow = "..." + descriptionToShow.Substring(startOfSubtringToShow, maxLengthToShow);

              if (startOfSubtringToShow > 0)
              {
                  descriptionToShow = "..." + descriptionToShow;
              }
              if (startOfSubtringToShow + maxLengthToShow < descriptionToShow.Length)
              {
                  descriptionToShow = descriptionToShow + "...";
              }
          }

          descriptionToShow = Regex.Replace(
            descriptionToShow,
            Model.SearchTarget,
            "<b><u>" + Model.SearchTarget + "</u></b>", RegexOptions.IgnoreCase);

        }
        @Html.Raw(descriptionToShow)
    </p>
</div>