@using System.ComponentModel
@using JoinRpg.Web.Models
@model FieldValueViewModel
@{ var hideClassName = !Model.IsPlayerVisible ? "world-object-hidden" : ""; }

  @if (Model.FieldViewType == ProjectFieldViewType.Header)
  {
      <h4 class="@hideClassName">@Model.FieldName</h4>
    <div class="help-block @hideClassName">
      @Model.Description
    </div>
    return;
  }

<div class="form-group @hideClassName">
    <label class="control-label col-md-2">@Model.FieldName</label>
    <div class="col-md-10">
        @*TODO: May be also set client id here*@
        @switch (Model.FieldViewType)
        {
            case ProjectFieldViewType.Dropdown:
            case ProjectFieldViewType.MultiSelect:
              foreach (var value in Model.ValueList)
              {
                if (Model.HasMasterAccess && value.SpecialGroupId != null)
                {
                  @Html.ActionLink(value.Label, "Details", "GameGroups", new {Model.ProjectId, CharacterGroupId = value.SpecialGroupId}, null)
                  <text>&nbsp;</text>
                }
                else
                {
                  @value.Label
                }
                <div class="help-block">@value.DescriptionHtml</div>
              if (Model.HasMasterAccess)
              {
                <div class="help-block world-object-hidden">@value.MasterDescriptionHtml</div>
              }
            }
            break;
          case ProjectFieldViewType.Checkbox:
            if (!string.IsNullOrWhiteSpace(Model.Value))
            {
                    <span class="glyphicon glyphicon-ok"></span>
                }
                else
                {
                    <span class="glyphicon glyphicon-remove"></span>
                }
                break;
            case ProjectFieldViewType.String:
            case ProjectFieldViewType.Number:
            case ProjectFieldViewType.Text:
            @Model.DisplayString
                break;
            case ProjectFieldViewType.Header:
            default:
                throw new InvalidEnumArgumentException();
        }
      <div class="help-block">
        @Model.Description
      </div>
    </div>
</div>